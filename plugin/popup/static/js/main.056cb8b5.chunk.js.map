{"version":3,"sources":["store/app-data-context.ts","constants/constants.ts","constants/action-types.ts","reducers/index.ts","utils/combine-reducers.ts","reducers/trucks.ts","reducers/isLoggedIn.ts","components/app-data-provider.tsx","utils/storage.ts","components/trucks/show-truck-list-button.tsx","components/trucks/truck-list-item.tsx","components/trucks/no-trucks.tsx","components/trucks/add-truck-button.tsx","components/trucks/truck-list.tsx","components/trucks/truck-list-wrapper.tsx","actions/trucks.ts","components/fetch-button.tsx","components/login/greetings.tsx","components/login/form.tsx","services.ts","components/login/login.tsx","actions/isLoggedIn.ts","components/app-content.tsx","app.tsx","config/service-worker.js","index.js"],"names":["AppDataContext","React","createContext","trucks","isLoggedIn","dispatch","undefined","defaultStorage","isInitialized","isSearching","refreshRate","ACTION_TYPE","ACTION_TYPE_STORAGE_KEY_MAP","ADD_TRUCK","EDIT_TRUCK","REMOVE_TRUCK","UPDATE_LOGIN_STATE","rootReducer","reducers","reducerKeys","Object","keys","state","action","hasChanged","nextState","i","length","key","combineReducers","type","id","name","AppDataProvider","data","storage","children","useReducer","newState","set","getRootReducer","Provider","value","StorageService","nameSpace","Promise","resolve","reject","chrome","get","result","e","listener","onChanged","addListener","changes","areaName","newValue","then","all","entries","map","keyName","keyValue","allTrue","every","Boolean","reduce","acc","curr","JSON","parse","localStorage","getItem","ShowTruckListButton","props","isTrucksListShown","onTrucksListOpen","Fab","variant","size","color","aria-label","onClick","Input","styled","InputBase","TruckListItem","truck","onEditTruck","onRemoveTruck","useState","isEditing","setEditingMode","inputValue","setInputValue","ListItem","placeholder","readOnly","onChange","event","target","ListItemSecondaryAction","IconButton","Divider","Wrapper","div","NoTrucks","Box","fontWeight","fontSize","AddTruckButton","onAddTruck","Button","Paper","ListHeader","ListBody","List","TruckList","mappedTrucks","display","justifyContent","index","TruckListWrapper","onDispatch","toggleTrucksListVisibility","v4","editTruck","removeTruck","FetchButton","Message","Greetings","FormWrapper","FormWrapperInner","form","LoginField","TextField","PasswordField","LoginButton","Form","onSubmit","login","setLogin","password","setPassword","preventDefault","label","Auth","fetch","json","secrets","passHash","sha256","Login","a","async","AppContent","useContext","flexDirection","alignItems","App","isDataLoaded","setDataLoaded","setData","useEffect","getDataObject","fetchAppData","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.056cb8b5.chunk.js","sourcesContent":["import React from 'react';\nimport { AppData } from '../models/app-data';\n\nexport const AppDataContext = React.createContext<AppData & { dispatch: any }>({\n  trucks: { },\n  isLoggedIn: false,\n  dispatch: undefined as any,\n});\n","import {Storage} from \"../../../Shared/Models\";\n\nexport const ENV_DEVELOPMENT = 'development';\nexport const ENV_PRODUCTION = 'production';\n\nexport const CHROME_STORAGE_KEY = 'relayAuto';\nexport const defaultStorage: Storage = {\n  isInitialized: true,\n  isSearching: false,\n  refreshRate: 250,\n  isLoggedIn: true,\n  trucks: [],\n}\n","export const ACTION_TYPE = {\n  // Trucks\n  ADD_TRUCK: 'ADD_TRUCK',\n  EDIT_TRUCK: 'EDIT_TRUCK',\n  REMOVE_TRUCK: 'REMOVE_TRUCK',\n  UPDATE_LOGIN_STATE: 'UPDATE_LOGIN_STATE',\n};\n\nexport const ACTION_TYPE_STORAGE_KEY_MAP = {\n  // Trucks\n  ADD_TRUCK: 'trucks',\n  EDIT_TRUCK: 'trucks',\n  REMOVE_TRUCK: 'trucks',\n  UPDATE_LOGIN_STATE: 'isLoggedIn',\n};\n","import { trucksReducer } from './trucks';\nimport { isLoggedInReducer } from './isLoggedIn';\nimport { combineReducers } from '../utils/combine-reducers';\nimport { ACTION_TYPE_STORAGE_KEY_MAP } from '../constants/action-types';\n\nexport const rootReducer = combineReducers({\n  trucks: trucksReducer,\n  isLoggedIn: isLoggedInReducer,\n});\n\nexport const getRootReducer = (storage: any) => (state: any, action: any) => {\n  const newState = rootReducer(state, action);\n  // @ts-ignore\n  const key: string = ACTION_TYPE_STORAGE_KEY_MAP[action.type as string];\n  storage.set(key, newState[key]);\n  return newState;\n};\n","/* eslint-disable */\n\nexport function combineReducers (reducers: any = {}) {\n  const reducerKeys = Object.keys(reducers);\n  return function combination(state: any = { }, action: string) {\n    let hasChanged = false;\n    let nextState: any = { };\n    for (let i = 0; i < reducerKeys.length; i++) {\n      let key = reducerKeys[i];\n      nextState[key] = reducers[key](state[key], action);\n      hasChanged = hasChanged || nextState[key] !== state[key];\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n","import { ACTION_TYPE } from '../constants';\nimport { Trucks } from '../models/truck';\n\nexport const trucksReducer = (state: Trucks, action: any) => {\n  switch (action.type) {\n    case ACTION_TYPE.ADD_TRUCK:\n      return {\n        ...state,\n        [action.id]: {\n          id: action.id,\n          name: action.name,\n        },\n      };\n    case ACTION_TYPE.EDIT_TRUCK:\n      return {\n        ...state,\n        [action.id]: {\n          ...state[action.id],\n          name: action.name,\n        },\n      };\n    case ACTION_TYPE.REMOVE_TRUCK: {\n      const trucks = { ...state };\n      delete trucks[action.id];\n      return { ...trucks };\n    }\n    default:\n      return state;\n  }\n};\n","import { ACTION_TYPE } from '../constants';\n\nexport const isLoggedInReducer = (state: boolean, action: any) => {\n  switch (action.type) {\n    case ACTION_TYPE.UPDATE_LOGIN_STATE: {\n      return action.state;\n    }\n    default:\n      return false;\n  }\n};\n","import React, { useReducer } from 'react';\nimport { AppDataContext } from '../store/app-data-context';\nimport { AppData } from '../models/app-data';\nimport { getRootReducer } from '../reducers';\nimport { StorageService } from '../utils/storage';\n\nconst AppDataProvider = ({ data, storage, children }: PropTypes) => {\n  const [state, dispatch] = useReducer(getRootReducer(storage), { ...data });\n\n  return (\n    <AppDataContext.Provider value={{ ...state, dispatch }}>\n      {children}\n    </AppDataContext.Provider>\n  );\n};\n\ninterface PropTypes {\n  data: AppData\n  storage: StorageService\n  children: JSX.Element | JSX.Element[]\n}\n\nexport default AppDataProvider;\n","/* eslint-disable no-undef */\nimport { StorageServiceInterface } from \"../Shared/Services\";\nimport { defaultStorage } from \"../constants\";\n\nexport class StorageService implements StorageServiceInterface {\n  nameSpace = 'local';\n\n  get(key: string): Promise<any>  {\n    return new Promise((resolve, reject) => {\n      try {\n        // @ts-ignore\n        chrome.storage[this.nameSpace].get([`${key}`], (result) => {\n          resolve(result[`${key}`])\n        });\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  set(key: string | string[], value: any): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      try {\n        chrome.storage[`${this.nameSpace}`].set({[`${key}`]: value }, () => resolve(true));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  /**\n   * Adds the listener to the storage\n   *\n   * @param listener The method to be executed, accepts the new value of the changed parameter\n   * @param key The key of the storage to be observed\n   * @param value Optional, the value on which the listener should trigger\n   */\n  addListener(listener: (val: any) => void, key: string, value?: any) {\n    chrome.storage.onChanged.addListener((changes: object, areaName: string) => {\n      if (\n        !changes[`${key}`]\n        || value && value !== changes[`${key}`].newValue\n        || areaName !== this.nameSpace) {\n        return;\n      }\n\n      listener(changes[`${key}`]);\n    });\n  }\n\n  initialize(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      try {\n        this.get('isInitialized').then((isInitialized) => {\n          if(!isInitialized) {\n            Promise.all(Object.entries(defaultStorage).map(([keyName, keyValue]) =>\n              this.set(`${keyName}`, defaultStorage[keyValue]))).then((allTrue) => {\n                allTrue.every(Boolean)\n                  ? resolve(true)\n                  : reject('Some values in storage are not set successfully!');\n              }\n            );\n          }\n        });\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  public getDataObject(keys: string[]): Promise<any> {\n    return new Promise((resolve) => {\n      const res: any = keys.reduce(\n        (acc, curr) => ({\n          ...acc,\n          [curr]: JSON.parse(localStorage.getItem(curr) as string),\n        }), {},\n      );\n      return resolve(res);\n    });\n  }\n}\n","import React from 'react';\nimport { Fab } from \"@material-ui/core\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n\nconst ShowTruckListButton = (props: PropTypes) => {\n  const { isTrucksListShown, onTrucksListOpen } = props;\n\n  return (\n    <Fab\n      variant=\"extended\"\n      size=\"medium\"\n      color=\"primary\"\n      aria-label=\"show-trucks\"\n      onClick={onTrucksListOpen}\n    >\n      Show Trucks\n      {\n        isTrucksListShown\n          ? <ExpandLessIcon />\n          : <ExpandMoreIcon />\n      }\n    </Fab>\n  );\n};\n\ninterface PropTypes {\n  isTrucksListShown: boolean\n  onTrucksListOpen: () => void\n}\n\nexport default ShowTruckListButton;\n","import React, { ChangeEvent, useState } from 'react';\nimport { Truck } from \"../../models/truck\";\nimport {Divider, IconButton, InputBase, ListItem, ListItemSecondaryAction} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport styled from \"styled-components\";\n\nconst TruckListItem = (props: PropTypes) => {\n  const { truck, onEditTruck, onRemoveTruck } = props;\n  const [ isEditing, setEditingMode ] = useState<boolean>(false);\n  const [ inputValue, setInputValue ] = useState<string>(truck.name || \"\");\n\n  const confirmEditing = () => {\n    onEditTruck(inputValue);\n    setEditingMode(false);\n  }\n\n  const cancelEditing = () => {\n    setInputValue(truck.name);\n    setEditingMode(false);\n  }\n\n  const onEditItem = () => {\n    setInputValue(truck.name);\n    setEditingMode(true);\n  }\n\n  return (\n    <>\n      <ListItem>\n        {\n          <Input\n            placeholder=\"Name\"\n            readOnly={!isEditing}\n            value={isEditing ? inputValue : truck.name}\n            onChange={(event: ChangeEvent<HTMLInputElement>) => setInputValue(event.target.value)}\n          />\n        }\n        <ListItemSecondaryAction>\n          {\n            isEditing\n              ? (\n                <>\n                  <IconButton aria-label=\"edit\" onClick={confirmEditing}>\n                    <CheckIcon />\n                  </IconButton>\n                  <IconButton aria-label=\"delete\" onClick={cancelEditing}>\n                    <CloseIcon />\n                  </IconButton>\n                </>\n              )\n              : (\n                <>\n                  <IconButton aria-label=\"edit\" onClick={onEditItem}>\n                    <EditIcon />\n                  </IconButton>\n                  <IconButton aria-label=\"delete\" onClick={onRemoveTruck}>\n                    <DeleteIcon />\n                  </IconButton>\n                </>\n              )\n          }\n        </ListItemSecondaryAction>\n      </ListItem>\n      <Divider />\n    </>\n  );\n};\n\nconst Input = styled(InputBase)`\n  width: 100%;\n`;\n\ninterface PropTypes {\n  truck: Truck\n  onEditTruck: (name: string) => any\n  onRemoveTruck: () => any\n}\n\nexport default TruckListItem;\n","import React from 'react';\nimport {Box} from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nconst NoTrucks = () => {\n  return (\n    <Wrapper>\n      <Box\n        fontWeight={500}\n        fontSize={20}\n      >\n        You have no trucks yet.\n      </Box>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  margin-top: 100px;\n  justify-content: center;\n  align-items: center;\n`;\nexport default NoTrucks;\n","import React from 'react';\nimport { Button, PropTypes } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst AddTruckButton = (props: PropTypes) => {\n  const { onAddTruck } = props;\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={onAddTruck}\n    >\n      Add\n      <AddIcon />\n    </Button>\n  );\n};\n\ninterface PropTypes {\n  onAddTruck: () => void\n}\nexport default AddTruckButton;\n","import React from 'react';\nimport { Box, Divider, List, Paper } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { Truck, Trucks } from \"../../models/truck\";\nimport TruckListItem from \"./truck-list-item\";\nimport NoTrucks from \"./no-trucks\";\nimport AddTruckButton from \"./add-truck-button\";\n\nconst TruckList = (props: PropTypes) => {\n  const { trucks, onAddTruck, onEditTruck, onRemoveTruck } = props;\n  const mappedTrucks: Truck[] = Object.keys(trucks).map(id => trucks[id]);\n\n  return (\n    <Wrapper>\n      <ListHeader\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <AddTruckButton\n          onAddTruck={onAddTruck}\n        />\n      </ListHeader>\n      <Divider />\n      {\n        mappedTrucks.length\n          ? (\n            <ListBody>\n              {\n                mappedTrucks.map((truck, index) => (\n                  <TruckListItem\n                    key={index}\n                    truck={truck}\n                    onEditTruck={(name: string) => onEditTruck(truck.id, name)}\n                    onRemoveTruck={() => onRemoveTruck(truck.id)}\n                  />\n                ))\n              }\n            </ListBody>\n          )\n          : <NoTrucks />\n      }\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(Paper)`\n  width: 100%;\n  margin-top: 25px;\n  background: #fff;\n  height: 300px;\n  max-height: 300px;\n  overflow: auto;\n`;\n\nconst ListHeader = styled(Box)`\n  padding: 10px;\n`;\n\nconst ListBody = styled(List)`\n  padding-bottom: 0 !important;\n`;\n\ninterface PropTypes {\n  trucks: Trucks\n  onAddTruck: () => void\n  onEditTruck: (id: string, name: string) => any\n  onRemoveTruck: (id: string) => any\n}\n\nexport default TruckList;\n","import React, { useMemo, useState } from 'react';\nimport ShowTruckListButton from \"./show-truck-list-button\";\nimport TruckList from \"./truck-list\";\nimport { Trucks } from \"../../models/truck\";\nimport {addTruck, editTruck, removeTruck} from \"../../actions/trucks\";\nimport styled from \"styled-components\";\n\nconst TruckListWrapper = (props: PropTypes) => {\n  const { trucks, onDispatch } = props;\n  const [ isTrucksListShown, toggleTrucksListVisibility ] = useState<boolean>(false);\n\n  const onAddTruck = () => onDispatch(addTruck(\"\"));\n  const onEditTruck = (id: string, name: string) => onDispatch(editTruck(id, name));\n  const onRemoveTruck = (id: string) => onDispatch(removeTruck(id));\n\n  return (\n    <Wrapper>\n      <ShowTruckListButton\n        isTrucksListShown={isTrucksListShown}\n        onTrucksListOpen={() => toggleTrucksListVisibility(!isTrucksListShown)}\n      />\n      {\n        isTrucksListShown\n          ? (\n            <TruckList\n              trucks={trucks}\n              onAddTruck={onAddTruck}\n              onEditTruck={onEditTruck}\n              onRemoveTruck={onRemoveTruck}\n            />\n          )\n          : null\n      }\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-flow: column;\n  width: 100%;\n  margin-top: 50px;\n`;\n\ninterface PropTypes {\n  trucks: Trucks\n  onDispatch: (...args: any) => any\n}\n\nexport default TruckListWrapper;\n","import v4 from 'uuid/v4';\nimport { ACTION_TYPE } from '../constants';\n\nexport const addTruck = (name: string) => ({\n  type: ACTION_TYPE.ADD_TRUCK,\n  id: v4(),\n  name,\n});\n\nexport const editTruck = (id: string, name: string) => ({\n  type: ACTION_TYPE.EDIT_TRUCK,\n  id,\n  name,\n});\n\nexport const removeTruck = (id: string) => ({\n  type: ACTION_TYPE.REMOVE_TRUCK,\n  id,\n});\n","import React from 'react';\nimport { Button } from \"@material-ui/core\";\n\nconst FetchButton = () => {\n  return (\n    <Button\n      id=\"customTest\"\n      type=\"button\"\n      variant=\"contained\"\n      color=\"primary\"\n    >\n      Fetch\n    </Button>\n  );\n};\n\nexport default FetchButton;","import React from 'react';\nimport styled from \"styled-components\";\nimport {Box} from \"@material-ui/core\";\n\nconst Greetings = () => {\n  return (\n    <Wrapper>\n      <Message>\n        Relay Auto 📦\n      </Message>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(Box)`\n  width: 100%;\n  height: 150px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #6498FE;\n`\n\nconst Message = styled(Box)`\n  font-weight: bold;\n  display: block;\n  font-size: 40px;\n  color: #fff;\n`\n\nexport default Greetings;\n","import React, {ChangeEvent, FormEvent, useState} from 'react';\nimport styled from \"styled-components\";\nimport { Box, Button, TextField } from \"@material-ui/core\";\n\nconst Form = (props: PropTypes) => {\n  const { onSubmit } = props;\n  const [ login, setLogin ] = useState<string>(\"\");\n  const [ password, setPassword ] = useState<string>(\"\");\n\n  const handleSubmit = (event: FormEvent) => {\n    // TODO: Validation\n    event.preventDefault();\n    onSubmit({ login, password });\n  }\n\n  return (\n    <FormWrapper>\n      <FormWrapperInner\n        name=\"login-form\"\n        onSubmit={handleSubmit}\n      >\n        <LoginField\n          label=\"Login\"\n          onChange={(event: ChangeEvent<HTMLInputElement>) => setLogin(event.target.value)}\n        />\n        <PasswordField\n          label=\"Password\"\n          type=\"password\"\n          onChange={(event: ChangeEvent<HTMLInputElement>) => setPassword(event.target.value)}\n        />\n        <LoginButton\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Login\n        </LoginButton>\n      </FormWrapperInner>\n    </FormWrapper>\n  );\n};\n\nconst FormWrapper = styled(Box)`\n  width: 40%;\n  height: 450px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-end;\n`;\n\nconst FormWrapperInner = styled.form`\n  width: 100%;\n  margin-top: -40px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-end;\n`;\n\nconst LoginField = styled(TextField)`\n  width: 100%;\n`;\n\nconst PasswordField = styled(TextField)`\n  width: 100%;\n`;\n\nconst LoginButton = styled(Button)`\n  margin-top: 30px !important;\n`;\n\ninterface PropTypes {\n  onSubmit: (userData :{ login: string, password: string }) => any\n}\n\nexport default Form;\n","import { sha256 } from 'js-sha256';\n\nexport interface AuthResult {\n  isSuccess: boolean\n  encryption: string\n}\n\nexport class Auth {\n  static async login(login: string, password: string): Promise<boolean> {\n    try {\n      const result = await fetch('https://raw.githubusercontent.com/abrorAbdullaev/RelayAuth/master/authv2.json');\n      const secrets = await result.json();\n      const passHash: string | undefined = secrets[sha256(login)];\n      return !!(passHash && passHash === sha256(password));\n    } catch (e) {\n      return false;\n    }\n  }\n}","import React from 'react';\nimport styled from \"styled-components\";\nimport Greetings from \"./greetings\";\nimport Form from \"./form\";\nimport { updateLoginState } from \"../../actions/isLoggedIn\";\nimport { Auth } from \"../../services\";\n\nconst Login = (props: PropTypes) => {\n  const { onDispatch } = props;\n\n  // TODO: useCallback?\n  const onSubmit = async ({ login, password }: { login: string, password: string }) => {\n    const loginStatus = await Auth.login(login, password);\n\n    if (loginStatus) {\n      onDispatch(updateLoginState(true));\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Greetings/>\n      <Form\n        onSubmit={onSubmit}\n      />\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\ninterface PropTypes {\n  onDispatch: Function\n}\n\nexport default Login;\n","import { ACTION_TYPE } from \"../constants\";\n\nexport const updateLoginState = (state: boolean) => ({\n  type: ACTION_TYPE.UPDATE_LOGIN_STATE,\n  state\n});\n","import React, { useContext } from 'react';\nimport styled from \"styled-components\";\nimport TruckListWrapper from \"./trucks/truck-list-wrapper\";\nimport { AppDataContext } from \"../store/app-data-context\";\nimport FetchButton from \"./fetch-button\";\nimport Box from \"@material-ui/core/Box\";\nimport Login from \"./login/login\";\n\nconst AppContent = () => {\n  const { trucks, isLoggedIn, dispatch } = useContext(AppDataContext);\n\n  return (\n    isLoggedIn ? (\n      <Wrapper\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <FetchButton/>\n        <TruckListWrapper\n          trucks={trucks}\n          onDispatch={dispatch}\n        />\n      </Wrapper>\n    ) : (\n      <Login\n        onDispatch={dispatch}\n      />\n    )\n  );\n};\n\nconst Wrapper = styled(Box)`\n  padding: 50px 100px 0;\n  width: 100%;\n`;\n\nexport default AppContent;","import React, { useEffect, useState } from 'react';\nimport AppDataProvider from './components/app-data-provider';\nimport LocalStorage from './utils/localStorage';\nimport { StorageService } from './utils/storage';\nimport { AppData } from './models/app-data';\nimport { ENV_DEVELOPMENT } from './constants';\nimport AppContent from './components/app-content';\nimport initialData from './mock/initial-data';\n\nconst storage: any = process.env.NODE_ENV === ENV_DEVELOPMENT\n  ? new LocalStorage() // Is used to imitate Chrome Extensions Storage API during dev process\n  : new StorageService();\n\nconst App = () => {\n  const [isDataLoaded, setDataLoaded] = useState<boolean>(false);\n  const [data, setData] = useState<AppData>({\n    trucks: {},\n    isLoggedIn: false\n  });\n\n  const fetchAppData = async (): Promise<void> => {\n    const {\n      trucks,\n      isLoggedIn,\n    } = await storage.getDataObject([\n      'trucks',\n      'isLoggedIn'\n    ]);\n\n    setData({\n      ...data,\n      trucks: trucks || {},\n      isLoggedIn,\n    });\n\n    setDataLoaded(true);\n  };\n\n  const mockData = () => {\n    storage.set('trucks', initialData.trucks);\n    storage.set('isLoggedIn', initialData.isLoggedIn);\n  }\n\n  useEffect((): void => {\n    // mockData();\n    fetchAppData().then();\n  }, []);\n\n  return (\n    isDataLoaded\n      ? (\n        <AppDataProvider storage={storage} data={data}>\n          <AppContent/>\n        </AppDataProvider>\n      ) : <span>Loading</span>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './config/service-worker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service config: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}